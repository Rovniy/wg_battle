{
  "tasks": {
    "1": {
      "id": 1,
      "text": "Где-то в этой сети расположен сервер. Найдите его — ответом будет его имя",
      "link": "hubs"
    },
    "2": {
      "id": 2,
      "text": "╔═════════════════════════════════════════════════════════════════════════════╗║                   ████████╗██████╗  ██████╗ ███╗   ██╗                      ║║                   ╚══██╔══╝██╔══██╗██╔═══██╗████╗  ██║                      ║║                      ██║   ██████╔╝██║   ██║██╔██╗ ██║                      ║║                      ██║   ██╔══██╗██║   ██║██║╚██╗██║                      ║║                      ██║   ██║  ██║╚██████╔╝██║ ╚████║                      ║║                      ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝                      ║╚═════════════════════════════════════════════════════════════════════════════╝"
    },
    "3": {
      "id": 3,
      "image": "ask.jpg",
      "imageClass": "ask"
    },
    "4": {
      "id": 4,
      "text": "0LrQvtGC0Y/RgtC60LA=",
      "textClass": "Base64Spinner"
    },
    "5": {
      "id": 5,
      "text": "Напиши CSS селектор (один, без запятых), который выберет на странице по ссылке внизу SPAN элементы, справа от которых стоит комментарий <!-- этот -->\nНо есть ограничения! Допускается использовать только один раз псевдо-классы, начинающиеся с nth- (например, nth-child(), nth-of-type() и др)",
      "link": "css-selector-form"
    },
    "7": {
      "id": 7,
      "text": "Обрежем картинку до ромбовидной формы, как показано в примере. Можно использовать любую !квадратную! картинку",
      "image": "kitty.jpg"
    },
    "8": {
      "id": 8,
      "text": "Сделайте список, как показано на рисунке. каждый пункт списка должен представлять из себя <li>Пункт меню</li>. Никакие изменения внутрь <li> в разметке использовать нельзя",
      "image": "list.jpg"
    },
    "9": {
      "id": 9,
      "text": "Нарисуй такую фигуру в центре экрана, используя только HTML-разметку и CSS-стили",
      "image": "circle.jpg"
    },
    "10": {
      "id": 10,
      "text": "С помощью canvas нарисуйте сетку, как в школьной тетради"
    },
    "11": {
      "id": 11,
      "text": "Сделай произвольное текстовое поле, чтобы в него можно было что-либо писать. Сделай так, чтобы его содержимое сохранялось после обновления страницы браузера"
    },
    "12": {
      "id": 12,
      "text": "Создай 3 <input />. Сделай так, чтобы, как только в первый инпут вводится 2 символа, фокус ввода переносился на второй инпут и потом на третий"
    },
    "13": {
      "id": 13,
      "text": "Дан массив ['1', '2', '3', '4', '5', '6']. Сделайте из него строку '16-25-34'. Массив, конечно же, может быть любым"
    },
    "15": {
      "id": 15,
      "text": "Дано окно браузера. Перейди на сайт https://warthunder.ru.  Условно его можно разделить на правую и левую половины. Сделайте так, чтобы элементы, целиком находящиеся в левой половине окна окрасились в зеленый цвет, целиком находящиеся в правой половине окна - в синий, а находящиеся и там, и там - в красный"
    },
    "16": {
      "id": 16,
      "text": "Создай элемент <button>. По клику на него выведите координаты его четырех углов относительно окна браузера"
    },
    "18": {
      "id": 18,
      "text": "Нарисовать красный треугольник в центре экрана"
    },
    "19": {
      "id": 19,
      "text": "Реализовать функцию f(string). Функция принимает строку и возвращает результат в измененном стиле: \"hello World\" -> \"HeLlO WoRlD\"(Первая буква большая, вторая маленькая, третья большая и т.д.) Аргументом может быть строка, содержащая только алфавитные символы и пробелы. Пробелы будут только в том случае, если в строке несколько слов. Слова разделены одним пробелом"
    },
    "20": {
      "id": 20,
      "text": "Реализовать функцию f(n), которая принимает число N и возвращает массив, размерностью N, состоящий из чисел от 0 (нуля) до N включительно в рандомном порядке. Каждый новый вызов этой функции должен возвращать массив с иным порядком чисел. Пример:\nfunc(3) -> [2, 3, 0, 1]\nfunc(3) -> [3, 0, 2, 1]\n"
    },
    "21": {
      "id": 21,
      "text": "Создать элемент “<span>Hello world</span>”. Реализовать возможность его изменения путем набора текста на клавиатуре в окне браузера, не используя в реализации тег <input />. При добавлении нового символа он должен выводиться в консоль"
    },
    "22": {
      "id": 22,
      "text": "Реализовать бегущую строку с надписью “I LOVE FE”, не прибегая к использованию JS. Текст должен бежать справа налево"
    },
    "24": {
      "id": 24,
      "text": "Реализовать функцию, которая принимает в себя массив чисел и удаляет из него дубликаты. При вызове функции она должна вернуть длину нового массива.\nПример: func([1,2,3,3,5,3,2,7,8,2]) -> 6"
    },
    "25": {
      "id": 25,
      "text": "Напишите функцию на JavaScript, находящий максимальное из двух чисел, не используя операторы if-else, любые операторы сравнения или библиотеки Math, lodash и т.п."
    },
    "26": {
      "id": 26,
      "text": "Создайте гексагон в центре экрана красного цвета размером 500x500px. При наведении мышкой на гексагон он должен менять цвет на желтый. Hover-эффект должен срабатывать только при наведении на сам гексагон, а не на прямоугольный блок, который он занимает. Реализация не важна!"
    }
  },
  "completedTasks": []
}
